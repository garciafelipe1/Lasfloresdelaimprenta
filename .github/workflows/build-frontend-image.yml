name: Build Next.js Docker Image

on:
  push:
    branches: [ main ]
    paths:
      - "apps/www/**"
      - "Dockerfile"
      - ".github/workflows/build-frontend-image.yml"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

# Evita runs simultáneos por el mismo ref
concurrency:
  group: build-frontend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Deploy-Production:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Si solo publicas amd64, QEMU es innecesario (puedes borrar este paso)
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Assert Dockerfile exists
        run: test -f ./Dockerfile || (echo "No se encontró ./Dockerfile" && exit 1)

      - name: Build and push (Next.js)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64       # <- clave para evitar binarios nativos incompatibles
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/floreria-nextjs:latest
            ghcr.io/${{ github.repository_owner }}/floreria-nextjs:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Si necesitas variables públicas en build de Next:
          # build-args: |
          #   NEXT_PUBLIC_MEDUSA_BACKEND_URL=${{ vars.NEXT_PUBLIC_MEDUSA_BACKEND_URL }}
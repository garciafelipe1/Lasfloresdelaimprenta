name: Vercel Production Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main
    paths:
      - "apps/www/**"
  workflow_dispatch:

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    steps:
      # Clonar el repositorio
      - uses: actions/checkout@v4

      # Configurar pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.6.5

      # Instalar Vercel CLI globalmente
      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest

      # Instalar dependencias
      - name: Install Dependencies
        working-directory: ./apps/www
        run: pnpm install

      # Traer la informaci√≥n del entorno de Vercel
      - name: Pull Vercel Environment Information
        working-directory: ./apps/www
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # DEBUG: Verificar archivos creados
      - name: Debug - Check files created
        working-directory: ./apps/www
        run: |
          echo "=== CHECKING FILES ==="
          ls -la .vercel/
          echo "=== ENV FILES ==="
          ls -la .env*
          echo "=== CONTENT OF .vercel/.env.production.local ==="
          cat .vercel/.env.production.local || echo "File not found"

      # DEBUG: Verificar variables de entorno
      - name: Debug - Check Environment Variables
        working-directory: ./apps/www
        run: |
          echo "=== ENVIRONMENT VARIABLES ==="
          echo "DB_URL: ${{ secrets.DB_URL }}"
          echo "DATABASE_AUTH_TOKEN: ${{ secrets.DATABASE_AUTH_TOKEN }}"
          echo "MP_ACCESS_TOKEN: ${{ secrets.MP_ACCESS_TOKEN }}"
          echo "MP_PUBLIC_KEY: ${{ secrets.MP_PUBLIC_KEY }}"
          echo "MP_CLIENT_ID: ${{ secrets.MP_CLIENT_ID }}"
          echo "MP_CLIENT_SECRET: ${{ secrets.MP_CLIENT_SECRET }}"
          echo "MP_WEBHOOK_KEY: ${{ secrets.MP_WEBHOOK_KEY }}"
          echo "APP_URL: ${{ secrets.APP_URL }}"
          echo "S3_URL: ${{ secrets.S3_URL }}"
          echo "S3_BUCKET: ${{ secrets.S3_BUCKET }}"
          echo "S3_KEY_ID: ${{ secrets.S3_KEY_ID }}"
          echo "S3_SECRET: ${{ secrets.S3_SECRET }}"
          echo "GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}"
          echo "GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}"
          echo "MEDUSA_BACKEND_URL: ${{ secrets.MEDUSA_BACKEND_URL }}"

      # Construir el proyecto con Next.js
      - name: Build Project
        working-directory: ./apps/www
        run: |
          # Exportar todas las variables de entorno desde GitHub Secrets
          export DB_URL="${{ secrets.DB_URL }}"
          export DATABASE_AUTH_TOKEN="${{ secrets.DATABASE_AUTH_TOKEN }}"
          export MP_ACCESS_TOKEN="${{ secrets.MP_ACCESS_TOKEN }}"
          export MP_PUBLIC_KEY="${{ secrets.MP_PUBLIC_KEY }}"
          export MP_CLIENT_ID="${{ secrets.MP_CLIENT_ID }}"
          export MP_CLIENT_SECRET="${{ secrets.MP_CLIENT_SECRET }}"
          export MP_WEBHOOK_KEY="${{ secrets.MP_WEBHOOK_KEY }}"
          export APP_URL="${{ secrets.APP_URL }}"
          export S3_URL="${{ secrets.S3_URL }}"
          export S3_BUCKET="${{ secrets.S3_BUCKET }}"
          export S3_KEY_ID="${{ secrets.S3_KEY_ID }}"
          export S3_SECRET="${{ secrets.S3_SECRET }}"
          export GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}"
          export GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}"
          export MEDUSA_BACKEND_URL="${{ secrets.MEDUSA_BACKEND_URL }}"

          # Ejecutar build
          pnpm run build

      # Desplegar el proyecto en Vercel
      - name: Deploy Project to Vercel
        working-directory: ./apps/www
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

name: Vercel Production Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main
    paths:
      - "apps/www/**"
  workflow_dispatch:

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    steps:
      # 1Ô∏è‚É£ Clonar el repositorio
      - uses: actions/checkout@v4

      # 2Ô∏è‚É£ Configurar pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.6.5

      # 3Ô∏è‚É£ Instalar Vercel CLI globalmente
      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest

      # 4Ô∏è‚É£ Instalar dependencias
      - name: Install Dependencies
        working-directory: ./apps/www
        run: pnpm install

      # 5Ô∏è‚É£ Traer la informaci√≥n del entorno de Vercel
      - name: Pull Vercel Environment Information
        working-directory: ./apps/www
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # 6Ô∏è‚É£ DEBUG: Verificar archivos creados
      - name: Debug - Check files created
        working-directory: ./apps/www
        run: |
          echo "=== CHECKING FILES ==="
          ls -la .vercel/
          echo "=== ENV FILES ==="
          ls -la .env*
          echo "=== CONTENT OF .vercel/.env.production.local ==="
          cat .vercel/.env.production.local || echo "File not found"

      # 7Ô∏è‚É£ DEBUG: Verificar variables de entorno
      - name: Debug - Check Environment Variables
        working-directory: ./apps/www
        run: |
          echo "=== ENVIRONMENT VARIABLES ==="
          echo "DB_URL: ${{ secrets.DB_URL }}"
          echo "DATABASE_AUTH_TOKEN: ${{ secrets.DATABASE_AUTH_TOKEN }}"
          echo "MP_ACCESS_TOKEN: ${{ secrets.MP_ACCESS_TOKEN }}"
          echo "MP_PUBLIC_KEY: ${{ secrets.MP_PUBLIC_KEY }}"
          echo "MP_CLIENT_ID: ${{ secrets.MP_CLIENT_ID }}"
          echo "MP_CLIENT_SECRET: ${{ secrets.MP_CLIENT_SECRET }}"
          echo "MP_WEBHOOK_KEY: ${{ secrets.MP_WEBHOOK_KEY }}"
          echo "APP_URL: ${{ secrets.APP_URL }}"
          echo "S3_URL: ${{ secrets.S3_URL }}"
          echo "S3_BUCKET: ${{ secrets.S3_BUCKET }}"
          echo "S3_KEY_ID: ${{ secrets.S3_KEY_ID }}"
          echo "S3_SECRET: ${{ secrets.S3_SECRET }}"
          echo "GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}"
          echo "GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}"
          echo "MEDUSA_BACKEND_URL: ${{ secrets.MEDUSA_BACKEND_URL }}"

      # 8Ô∏è‚É£ Crear archivo .env.production para Next.js
      - name: Create .env.production
        working-directory: ./apps/www
        run: |
          echo "DB_URL=${{ secrets.DB_URL }}" > .env.production
          echo "DATABASE_AUTH_TOKEN=${{ secrets.DATABASE_AUTH_TOKEN }}" >> .env.production
          echo "MP_ACCESS_TOKEN=${{ secrets.MP_ACCESS_TOKEN }}" >> .env.production
          echo "MP_PUBLIC_KEY=${{ secrets.MP_PUBLIC_KEY }}" >> .env.production
          echo "MP_CLIENT_ID=${{ secrets.MP_CLIENT_ID }}" >> .env.production
          echo "MP_CLIENT_SECRET=${{ secrets.MP_CLIENT_SECRET }}" >> .env.production
          echo "MP_WEBHOOK_KEY=${{ secrets.MP_WEBHOOK_KEY }}" >> .env.production
          echo "APP_URL=${{ secrets.APP_URL }}" >> .env.production
          echo "S3_URL=${{ secrets.S3_URL }}" >> .env.production
          echo "S3_BUCKET=${{ secrets.S3_BUCKET }}" >> .env.production
          echo "S3_KEY_ID=${{ secrets.S3_KEY_ID }}" >> .env.production
          echo "S3_SECRET=${{ secrets.S3_SECRET }}" >> .env.production
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env.production
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env.production
          echo "MEDUSA_BACKEND_URL=${{ secrets.MEDUSA_BACKEND_URL }}" >> .env.production

      # 9Ô∏è‚É£ Construir el proyecto con Next.js
      - name: Build Project
        working-directory: ./apps/www
        run: pnpm run build

      # üîü Desplegar el proyecto en Vercel
      - name: Deploy Project to Vercel
        working-directory: ./apps/www
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

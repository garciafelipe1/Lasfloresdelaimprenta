name: Vercel Production Deployment

on:
  push:
    branches: [main]
    paths:
      - "apps/www/**"
  workflow_dispatch:

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    environment: TOKEN_VERCEL
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    steps:
      # 1) Checkout
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2) Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3) Setup pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      # 4) Install dependencies solo de apps/www
      - name: Install Dependencies (apps/www)
        run: pnpm install --filter ./apps/www --frozen-lockfile

      # 5) Crear .env.production para Next.js
      - name: Create .env.production
        run: |
          mkdir -p apps/www
          {
            echo "DB_URL=${{ secrets.DB_URL }}"
            echo "DB_TOKEN=${{ secrets.DATABASE_AUTH_TOKEN }}"
            echo "DATABASE_AUTH_TOKEN=${{ secrets.DATABASE_AUTH_TOKEN }}"
            echo "MP_ACCESS_TOKEN=${{ secrets.MP_ACCESS_TOKEN }}"
            echo "MP_PUBLIC_KEY=${{ secrets.MP_PUBLIC_KEY }}"
            echo "MP_CLIENT_ID=${{ secrets.MP_CLIENT_ID }}"
            echo "MP_CLIENT_SECRET=${{ secrets.MP_CLIENT_SECRET }}"
            echo "MP_WEBHOOK_KEY=${{ secrets.MP_WEBHOOK_KEY }}"
            echo "MERCADO_PAGO_TOKEN=${{ secrets.MP_ACCESS_TOKEN }}"
            echo "APP_URL=${{ secrets.APP_URL }}"
            echo "S3_URL=${{ secrets.S3_URL }}"
            echo "S3_BUCKET=${{ secrets.S3_BUCKET }}"
            echo "S3_KEY_ID=${{ secrets.S3_KEY_ID }}"
            echo "S3_SECRET=${{ secrets.S3_SECRET }}"
            echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}"
            echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}"
            echo "MEDUSA_BACKEND_URL=${{ secrets.MEDUSA_BACKEND_URL }}"
            echo "NEXT_PUBLIC_MEDUSA_BACKEND_URL=${{ secrets.MEDUSA_BACKEND_URL }}"
            echo "NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY=${{ secrets.MEDUSA_PUBLISHABLE_KEY }}"
            echo "NEXT_PUBLIC_DEFAULT_REGION=${{ secrets.DEFAULT_REGION }}"
          } > apps/www/.env.production

      # 6) Deploy a Vercel usando CLI apuntando a apps/www
      - name: Vercel Deploy
        run: npx vercel --prod --confirm --token ${{ secrets.VERCEL_TOKEN }} --cwd ./apps/www
